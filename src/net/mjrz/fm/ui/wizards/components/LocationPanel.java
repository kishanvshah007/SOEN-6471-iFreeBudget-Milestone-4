/*******************************************************************************
 * Copyright  
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package net.mjrz.fm.ui.wizards.components;

import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;

import javax.swing.JFileChooser;

import net.mjrz.fm.Main;

public class LocationPanel extends javax.swing.JPanel implements
		WizardComponent {

	private static final long serialVersionUID = 1L;
	// Variables declaration - do not modify
	private javax.swing.JButton changeLocationB;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JTextField locationTf;
	private JFileChooser fileChooser;

	// End of variables declaration

	/** Creates new form LocationPanel */
	public LocationPanel() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		fileChooser = new JFileChooser();
		fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

		jLabel1 = new javax.swing.JLabel();

		locationTf = new javax.swing.JTextField();
		StringBuilder homedir = new StringBuilder(Main.homedir);
		homedir.append(Main.PATH_SEPARATOR);
		homedir.append("fmdata");
		homedir.append(Main.PATH_SEPARATOR);
		homedir.append("profiles");

		locationTf.setText(homedir.toString());

		changeLocationB = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();

		setBackground(java.awt.Color.white);

		jLabel1.setText("Location:");
		Font f = jLabel1.getFont().deriveFont(Font.BOLD);
		jLabel1.setFont(f);

		locationTf.setEditable(false);

		changeLocationB.setText("Change");
		changeLocationB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int val = fileChooser.showOpenDialog(LocationPanel.this
						.getTopLevelAncestor());
				if (val == JFileChooser.APPROVE_OPTION) {
					java.io.File f = fileChooser.getSelectedFile();
					locationTf.setText(f.getAbsolutePath());
				}
			}
		});

		jLabel2.setText("Choose where you want to store the data files.");
		jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

		this.setLayout(new GridBagLayout());

		GridBagConstraints g1 = new GridBagConstraints();
		g1.gridx = 0;
		g1.gridy = 0;
		g1.weightx = 1;
		g1.fill = GridBagConstraints.BOTH;
		g1.insets = new Insets(10, 10, 10, 10);
		add(jLabel1, g1);

		g1 = new GridBagConstraints();
		g1.gridx = 0;
		g1.gridy = 1;
		g1.fill = GridBagConstraints.HORIZONTAL;
		g1.insets = new Insets(10, 10, 10, 10);
		add(locationTf, g1);

		g1 = new GridBagConstraints();
		g1.gridx = 0;
		g1.gridy = 2;
		g1.fill = GridBagConstraints.HORIZONTAL;
		g1.insets = new Insets(10, 10, 10, 10);
		add(jLabel2, g1);

		g1 = new GridBagConstraints();
		g1.gridx = 0;
		g1.gridy = 3;
		g1.anchor = GridBagConstraints.WEST;
		g1.fill = GridBagConstraints.NONE;
		g1.insets = new Insets(10, 10, 10, 1);
		add(changeLocationB, g1);

	}// </editor-fold>

	@Override
	public String getMessage() {
		return null;
	}

	@Override
	public String[][] getValues() {
		String[][] ret = new String[1][1];

		String[] row = new String[2];
		row[0] = "LOCATION";
		row[1] = locationTf.getText();

		ret[0] = row;

		return ret;
	}

	@Override
	public boolean isComponentValid() {
		return true;
	}

	@Override
	public void setComponentFocus() {
		changeLocationB.requestFocusInWindow();
	}

	@Override
	public void updateComponentUI(HashMap<String, String[][]> values) {
	}
}
