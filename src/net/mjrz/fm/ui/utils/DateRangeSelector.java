/*******************************************************************************
 * Copyright  
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package net.mjrz.fm.ui.utils;

import static net.mjrz.fm.utils.Messages.tr;

import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.text.MaskFormatter;

import net.mjrz.fm.actions.ActionRequest;
import net.mjrz.fm.actions.ActionResponse;
import net.mjrz.fm.actions.GetEarningsReportAction;
import net.mjrz.fm.actions.GetExpReportAction;
import net.mjrz.fm.ui.FinanceManagerUI;
import net.mjrz.fm.ui.dialogs.EarningsReportDialog;
import net.mjrz.fm.ui.dialogs.ExpReportDialog;
import net.mjrz.fm.utils.Messages;
import net.mjrz.fm.utils.MiscUtils;

import org.apache.log4j.Logger;

public class DateRangeSelector extends javax.swing.JPanel {

	public static final int REPORT_TYPE_INCOME = 1;
	public static final int REPORT_TYPE_EXPENSE = 2;

	/** Creates new form DateRangeSelector */
	private DateRangeSelector(JDialog parent, FinanceManagerUI fm,
			int reportType) {
		this.parent = parent;
		this.fm = fm;
		this.reportType = reportType;
		initDateMaskFormatter();
		initComponents();
		initTextFields();
	}

	private void initTextFields() {
		Date today = new Date();
		fromDateTf.setDate(today);
		toDateTf.setDate(today);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		fromDateTf = new net.mjrz.fm.ui.utils.DateChooser(false, sdf);
		jLabel3 = new javax.swing.JLabel();
		toDateTf = new net.mjrz.fm.ui.utils.DateChooser(false, sdf);
		okB = new javax.swing.JButton();
		cancelB = new javax.swing.JButton();

		fromCalB = new javax.swing.JButton();
		fromCalB.setVisible(false);

		toCalB = new javax.swing.JButton();
		toCalB.setVisible(false);

		jLabel1.setBackground(java.awt.Color.lightGray);
		jLabel1.setText(tr("Select date range"));

		jLabel2.setText(tr("From"));

		jLabel3.setText(tr("To"));

		okB.setText(tr("Ok"));
		okB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okBActionPerformed(evt);
			}
		});

		cancelB.setText(tr("Cancel"));
		cancelB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelBActionPerformed(evt);
			}
		});

		fromCalB.setIcon(new javax.swing.ImageIcon("icons/calendar.png")); // NOI18N
		fromCalB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				fromCalBActionPerformed(evt);
			}
		});

		toCalB.setIcon(new javax.swing.ImageIcon("icons/calendar.png")); // NOI18N
		toCalB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				toCalBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jLabel1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														288, Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																				.addComponent(
																						jLabel3,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						jLabel2,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						56,
																						Short.MAX_VALUE))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						layout.createSequentialGroup()
																								.addComponent(
																										okB,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										Short.MAX_VALUE)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										cancelB,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										83,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING,
																												false)
																												.addComponent(
																														toDateTf,
																														javax.swing.GroupLayout.Alignment.LEADING)
																												.addComponent(
																														fromDateTf,
																														javax.swing.GroupLayout.Alignment.LEADING,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														148,
																														Short.MAX_VALUE))
																								.addGap(6,
																										6,
																										6)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING,
																												false)
																												.addComponent(
																														toCalB,
																														0,
																														0,
																														Short.MAX_VALUE)
																												.addComponent(
																														fromCalB,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														28,
																														Short.MAX_VALUE))))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		32,
																		Short.MAX_VALUE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(33, 33, 33)
								.addComponent(jLabel1)
								.addGap(30, 30, 30)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2)
												.addComponent(
														fromDateTf,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(fromCalB))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(
														toDateTf,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(toCalB))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(cancelB)
												.addComponent(okB))
								.addContainerGap(28, Short.MAX_VALUE)));
	}// </editor-fold>

	private void cancelBActionPerformed(java.awt.event.ActionEvent evt) {
		parent.dispose();
	}

	private void okBActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); //$NON-NLS-1$
			
			Calendar f = Calendar.getInstance();
			f.setTime(fromDateTf.getDate());
			f.set(Calendar.HOUR_OF_DAY, 0);
			f.set(Calendar.MINUTE, 0);
			f.set(Calendar.SECOND, 0);
			
			Calendar t = Calendar.getInstance();
			t.setTime(toDateTf.getDate());
			t.set(Calendar.HOUR_OF_DAY, 23);
			t.set(Calendar.MINUTE, 59);
			t.set(Calendar.SECOND, 59);

			if (f.after(t)) {
				JOptionPane.showMessageDialog(this,
						tr("From date cannot be after to date"),
						Messages.getString("Error"), JOptionPane.ERROR_MESSAGE);
				return;
			}
			String[] range = new String[2];
			range[0] = sdf.format(f.getTime());
			range[1] = sdf.format(t.getTime());

			showExpReportDialog(range);
		}
		catch (Exception e) {
			logger.error(MiscUtils.stackTrace2String(e));
		}
	}

	private void fromCalBActionPerformed(java.awt.event.ActionEvent evt) {
	}

	private void toCalBActionPerformed(java.awt.event.ActionEvent evt) {
	}

	private void initDateMaskFormatter() {
		try {
			dateMaskFormatter = new MaskFormatter("####-##-##");
			dateMaskFormatter.setPlaceholderCharacter('#');
		}
		catch (Exception e) {
			// Ignore exception
		}
	}

	public static JDialog getDialog(FinanceManagerUI parent, int reportType) {

		JDialog f = new JDialog(parent, "Select range", true);

		DateRangeSelector rs = new DateRangeSelector(f, parent, reportType);

		f.getContentPane().add(rs, BorderLayout.CENTER);

		f.getRootPane().setDefaultButton(rs.okB);

		return f;
	}

	// Variables declaration - do not modify
	private javax.swing.JButton cancelB;
	private javax.swing.JButton fromCalB;
	private net.mjrz.fm.ui.utils.DateChooser fromDateTf;
	private net.mjrz.fm.ui.utils.DateChooser toDateTf;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JButton okB;
	private javax.swing.JButton toCalB;
	// End of variables declaration
	private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	private int dest = 0;
	private MaskFormatter dateMaskFormatter;
	private static final long serialVersionUID = 1L;
	private JDialog parent;
	private FinanceManagerUI fm;
	private static Logger logger = Logger.getLogger(DateRangeSelector.class
			.getName());
	private int reportType = -1;

	private ActionResponse getExpReportResponse(String range[])
			throws Exception {
		ActionRequest req = new ActionRequest();
		req.setActionName("getExpenseReport");
		req.setUser(fm.getUser());
		req.setProperty("DATERANGE", range);

		GetExpReportAction action = new GetExpReportAction();
		ActionResponse resp = action.executeAction(req);
		return resp;
	}

	private ActionResponse getIncReportResponse(String range[])
			throws Exception {
		ActionRequest req = new ActionRequest();
		req.setActionName("getEarningsReport");
		req.setUser(fm.getUser());
		req.setProperty("DATERANGE", range);

		GetEarningsReportAction action = new GetEarningsReportAction();
		ActionResponse resp = action.executeAction(req);
		return resp;
	}

	private void showExpReportDialog(final String[] range) {
		try {
			parent.dispose();
			SwingUtilities.invokeLater(new Runnable() {
				public void run() {
					try {
						setCursor(Cursor
								.getPredefinedCursor(Cursor.WAIT_CURSOR));

						JDialog d = null;
						ActionResponse resp = null;
						if (reportType == REPORT_TYPE_INCOME) {
							resp = getIncReportResponse(range);
							d = new EarningsReportDialog(fm, resp,
									EarningsReportDialog.title);
						}
						else {
							resp = getExpReportResponse(range);
							d = new ExpReportDialog(fm, resp,
									ExpReportDialog.title);
						}
						d.pack();
						d.setSize(new Dimension(850, 600));
						d.setLocationRelativeTo(fm);
						d.setVisible(true);
					}
					catch (Exception e) {
						logger.error(MiscUtils.stackTrace2String(e));
						JOptionPane.showMessageDialog(fm,
								tr("Error creating expense report."),
								Messages.getString("Error"),
								JOptionPane.ERROR_MESSAGE);
					}
					finally {
						setCursor(Cursor
								.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
					}
				}
			});
		}
		catch (Exception e) {
			logger.error(e);
		}
	}
}
