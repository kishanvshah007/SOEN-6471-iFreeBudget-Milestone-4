/*******************************************************************************
 * Copyright  
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package net.mjrz.fm.ui.panels.ofx;

import static net.mjrz.fm.utils.Messages.tr;

import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.util.Collections;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;

import net.mjrz.fm.actions.ActionResponse;
import net.mjrz.fm.constants.AccountTypes;
import net.mjrz.fm.entity.FManEntityManager;
import net.mjrz.fm.entity.beans.Account;
import net.mjrz.fm.entity.beans.AccountCategory;
import net.mjrz.fm.services.SessionManager;
import net.mjrz.fm.ui.panels.NewAccountPanel;
import net.mjrz.fm.ui.utils.AccountCbEntry;
import net.mjrz.fm.ui.utils.AccountCbKeySelectionManager;
import net.mjrz.fm.ui.utils.GuiUtilities;
import net.mjrz.fm.ui.utils.REditor;
import net.mjrz.fm.utils.MiscUtils;
import net.mjrz.fm.utils.indexer.IndexedEntity;

import org.apache.log4j.Logger;

@SuppressWarnings("serial")
public class ImportTxEditorPanel extends javax.swing.JPanel {

	// Variables declaration - do not modify
	private javax.swing.JLabel accountLbl;
	private javax.swing.JLabel accountTf;
	private javax.swing.JLabel amountLbl;
	private javax.swing.JLabel amountValueLbl;
	private javax.swing.JLabel dateLbl;
	private javax.swing.JLabel dateValueLbl;
	private javax.swing.JButton jButton1;
	private javax.swing.JScrollPane jScrollPane1;
	private REditor notesTa;
	private javax.swing.JButton cancelB;
	private javax.swing.JComboBox payeeCb;
	private javax.swing.JLabel payeeLbl;
	private javax.swing.JButton saveB;
	// End of variables declaration

	private DefaultComboBoxModel payeeCbModel;

	private FManEntityManager em = new FManEntityManager();

	private TxObject txObject;
	public Logger logger = Logger.getLogger(getClass());

	/** Creates new form TransactionEditor */
	public ImportTxEditorPanel(TxObject txObject) {
		this.txObject = txObject;
		initComponents();
		initFields(txObject);
	}

	JButton getDefaultButton() {
		return saveB;
	}

	private void initFields(TxObject txObject) {
		NumberFormat numFormat = NumberFormat
				.getCurrencyInstance(SessionManager.getCurrencyLocale());

		String date = SessionManager.getDateFormat().format(txObject.getDate());

		accountTf.setText(txObject.getSource().getAccountName());
		amountValueLbl.setText(numFormat.format(txObject.getAmount()));
		dateValueLbl.setText(date);

		String markup = txObject.getMarkup();
		if (markup != null) {
			notesTa.setText(markup);
		}
		else {
			notesTa.setText(txObject.getNotes());
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		payeeCbModel = new DefaultComboBoxModel();
		accountLbl = new javax.swing.JLabel();
		accountTf = new javax.swing.JLabel();
		payeeLbl = new javax.swing.JLabel();
		payeeCb = new javax.swing.JComboBox();
		payeeCb.setKeySelectionManager(new AccountCbKeySelectionManager());
		amountLbl = new javax.swing.JLabel();
		dateLbl = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		notesTa = new REditor();
		cancelB = new javax.swing.JButton();
		saveB = new javax.swing.JButton();
		amountValueLbl = new javax.swing.JLabel();
		dateValueLbl = new javax.swing.JLabel();

		accountLbl.setText(tr("Account"));

		payeeLbl.setText(tr("Payee"));

		payeeCb.setModel(payeeCbModel);

		amountLbl.setText(tr("Amount"));

		dateLbl.setText(tr("Date"));

		jButton1.setIcon(new net.mjrz.fm.ui.utils.MyImageIcon("icons/addpf.png"));

		jButton1.setVisible(true);
		jButton1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				showNewAccountDialog();
			}
		});
		jButton1.setToolTipText(tr("Add new account"));
		// accountTf.setEditable(false);

		jScrollPane1.setViewportView(notesTa);

		cancelB.setText(tr("Cancel"));
		cancelB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okBActionPerformed(evt);
			}
		});
		cancelB.setMnemonic(KeyEvent.VK_C);

		saveB.setText(tr("Save"));
		saveB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveBActionPerformed(evt);
			}
		});
		saveB.setMnemonic(KeyEvent.VK_S);

		amountValueLbl.setText("$1000");
		amountValueLbl.setBorder(javax.swing.BorderFactory
				.createLineBorder(java.awt.Color.lightGray));

		dateValueLbl.setBorder(javax.swing.BorderFactory
				.createLineBorder(java.awt.Color.lightGray));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														376, Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																				.addComponent(
																						amountLbl,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						accountLbl,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						83,
																						Short.MAX_VALUE)
																				.addComponent(
																						payeeLbl,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						77,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						accountTf,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						281,
																						Short.MAX_VALUE)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(6,
																										6,
																										6)
																								.addComponent(
																										amountValueLbl,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										109,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										dateLbl)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										dateValueLbl,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										110,
																										Short.MAX_VALUE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										payeeCb,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										232,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										jButton1,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										30,
																										javax.swing.GroupLayout.PREFERRED_SIZE))))
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		saveB,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		87,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		cancelB,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		89,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(37, 37, 37)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(accountLbl)
												.addComponent(
														accountTf,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(payeeLbl)
												.addComponent(
														payeeCb,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jButton1))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(amountLbl)
												.addComponent(dateLbl)
												.addComponent(amountValueLbl)
												.addComponent(
														dateValueLbl,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														17,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										121, Short.MAX_VALUE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(cancelB)
												.addComponent(saveB))
								.addGap(22, 22, 22)));
	}// </editor-fold>

	private void okBActionPerformed(java.awt.event.ActionEvent evt) {
		SwingUtilities.getWindowAncestor(this).dispose();
	}

	private void saveBActionPerformed(java.awt.event.ActionEvent evt) {
		AccountCbEntry ae = (AccountCbEntry) payeeCb.getSelectedItem();
		if (ae != null) {
			Account a = ae.getAccount();
			IndexedEntity ie = new IndexedEntity();
			ie.setName(a.getAccountName());
			ie.setCount(1);
			ie.setType(a.getAccountType());

			txObject.setMatch(ie);
			txObject.setNotes(notesTa.getPlainText());
			txObject.setMarkup(notesTa.getText());
		}
		SwingUtilities.getWindowAncestor(this).dispose();
	}

	@SuppressWarnings("unchecked")
	public void loadPayeeList() {
		try {
			java.util.List<Account> accts = em
					.getAccountsForUser(SessionManager.getSessionUserId());

			Collections.sort(accts);

			int sel = 0;
			if (accts != null) {
				int i = 0;
				for (Object o : accts) {
					Account a = (Account) o;
					if (a.getAccountName()
							.equals(txObject.getMatch().getName())) {
						sel = i;
					}
					AccountCbEntry ae = new AccountCbEntry(a);
					payeeCbModel.addElement(ae);
					i++;
				}
			}
			payeeCb.setSelectedIndex(sel);
		}
		catch (Exception e) {
			Logger.getLogger(getClass()).error(MiscUtils.stackTrace2String(e));
		}
	}

	private AccountCategory getExpenseCategory() {
		List<AccountCategory> from = null;
		AccountCategory parent = null;
		try {
			from = FManEntityManager.getRootCategoies();

			for (AccountCategory c : from) {
				if (c.getCategoryId() == AccountTypes.ACCT_TYPE_EXPENSE) {
					return c;
				}
			}
		}
		catch (Exception e) {
			Logger.getLogger(getClass()).error(MiscUtils.stackTrace2String(e));
		}
		return null;
	}

	private void showNewAccountDialog() {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				JDialog d = new JDialog(SwingUtilities
						.getWindowAncestor(ImportTxEditorPanel.this),
						tr("New Account"),
						Dialog.ModalityType.APPLICATION_MODAL);

				NewAccountPanel p = new NewAccountPanel(d, getExpenseCategory());

				d.getContentPane().add(p);
				d.pack();
				d.setSize(new Dimension(375, 250));
				d.setLocationRelativeTo(ImportTxEditorPanel.this);
				d.setVisible(true);
				d.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
				GuiUtilities.addWindowClosingActionMap(d);

				ActionResponse resp = p.getResult();
				if (resp != null
						&& resp.getErrorCode() == ActionResponse.NOERROR) {
					Account account = (Account) resp.getResult("ACCOUNT");
					if (account != null) {
						AccountCbEntry ae = new AccountCbEntry(account);
						payeeCbModel.addElement(ae);
						payeeCb.setSelectedItem(ae);
					}
				}
			}
		});
	}
}
